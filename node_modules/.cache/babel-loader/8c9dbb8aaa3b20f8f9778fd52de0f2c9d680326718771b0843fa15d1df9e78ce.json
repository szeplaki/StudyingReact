{"ast":null,"code":"var _jsxFileName = \"/home/szeplaki/StudyingReact/src/components/Expenses/Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ExpensesList } from \"./ExpensesList\";\nimport { Card } from \"../UI/Card\";\nimport { ExpenseFilter } from \"./ExpenseFilter\";\nimport \"./Expenses.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Expenses(props) {\n  _s();\n  const [year, setYear] = useState(\"2020\");\n  const yearSetter = selectedYear => {\n    setYear(selectedYear);\n  };\n  const filteredExpenses = props.expenses.filter(expense => expense.date.getFullYear().toString() === year);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      selected: year,\n      onChangeYear: yearSetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {\n      items: filteredExpenses\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(Expenses, \"yCSp7yteJ4gwWCBMvRbb4Pxa8Xw=\");\n_c = Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpensesList","Card","ExpenseFilter","Expenses","props","year","setYear","yearSetter","selectedYear","filteredExpenses","expenses","filter","expense","date","getFullYear","toString"],"sources":["/home/szeplaki/StudyingReact/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ExpensesList } from \"./ExpensesList\";\nimport { Card } from \"../UI/Card\";\nimport { ExpenseFilter } from \"./ExpenseFilter\";\nimport \"./Expenses.css\";\n\nexport function Expenses(props) {\n  const [year, setYear] = useState(\"2020\");\n  const yearSetter = (selectedYear) => {\n    setYear(selectedYear);\n  };\n\n  const filteredExpenses = props.expenses.filter(expense => expense.date.getFullYear().toString() === year);\n  \n  \n\n  return (\n    <Card className=\"expenses\">\n      <ExpenseFilter selected={year} onChangeYear={yearSetter} />\n      <ExpensesList items={filteredExpenses} />\n    </Card>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,IAAI,QAAQ,YAAY;AACjC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,gBAAgB;AAAC;AAExB,OAAO,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,MAAM,CAAC;EACxC,MAAMQ,UAAU,GAAIC,YAAY,IAAK;IACnCF,OAAO,CAACE,YAAY,CAAC;EACvB,CAAC;EAED,MAAMC,gBAAgB,GAAGL,KAAK,CAACM,QAAQ,CAACC,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKV,IAAI,CAAC;EAIzG,oBACE,QAAC,IAAI;IAAC,SAAS,EAAC,UAAU;IAAA,wBACxB,QAAC,aAAa;MAAC,QAAQ,EAAEA,IAAK;MAAC,YAAY,EAAEE;IAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eAC3D,QAAC,YAAY;MAAC,KAAK,EAAEE;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACpC;AAEX;AAAC,GAhBeN,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}